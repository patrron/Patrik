<UserControl x:Class="CustomTemplateSamples.ControlTemplateStage1"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
    Height="300">
  <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center"  >
    <StackPanel.Resources>
      <Style TargetType="Button" x:Key="newTemplate">
        <!--Set the Background, Foreground, FontSize, Width, 
            Height, Margin, and Template properties for
            the Button.-->
        <Setter Property="Background" Value="Navy"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Width" Value="100"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Margin" Value="10"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <!--Create the ControlTemplate for the Button as part
                of the Button's style.-->
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="Button">
              <Border x:Name="RootElement">

                <!--Create the SolidColorBrush for the Background 
                      as an object elemment and give it a name so 
                      it can be referred to elsewhere in the control template.-->
                <Border.Background>
                  <SolidColorBrush x:Name="BorderBrush" Color="Black"/>
                </Border.Background>

                <!--Create a border that has a different color by adding smaller grid.
                      The background of this grid is specificied by the button's Background
                      property.-->
                <Grid Margin="4" Background="{TemplateBinding Background}">

                  <!--Use a ContentPresenter to display the Content of
                        the Button.-->
                  <ContentPresenter
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                        Margin="4,5,4,4" />
                </Grid>

              </Border>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>

    </StackPanel.Resources>

    <TextBlock FontSize="20" Text="Buttons with a custom ControlTemplate" HorizontalAlignment="Center"/>
    <TextBlock Text="This sample demonstrates the visual structure of a custom ControlTemplate." HorizontalAlignment="Center" Margin="2"
               TextWrapping="Wrap"/>
    <Button Style="{StaticResource newTemplate}" 
            Content="Button1"/>

    <Button Style="{StaticResource newTemplate}" Background="Purple" 
            Content="Button2" Click="Button_Click"/>
  </StackPanel>
</UserControl>
