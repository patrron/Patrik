<UserControl x:Class="CustomTemplateSamples.ControlTemplateStage2"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
    Height="300">
  <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center"  >
    <StackPanel.Resources>
      <Style TargetType="Button" x:Key="newTemplate">
        <!--Set the Background, Foreground, FontSize, Width, 
            Height, Margin, and Template properties for
            the Button.-->
        <Setter Property="Background" Value="Navy"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Width" Value="100"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Margin" Value="10"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <!--Create the ControlTemplate for the Button as part
                of the Button's style.-->
        <Setter Property="Template">
          <Setter.Value>
            <!--<SnippetVisualStates>-->
            <ControlTemplate TargetType="Button">
              <Border x:Name="RootElement">
                <VisualStateManager.VisualStateGroups>

                  <!--<Snippet10>-->
                  <!--Define the states and transitions for the common states.
                        The states in the VisualStateGroup are mutually exclusive to
                        each other.-->
                  <VisualStateGroup x:Name="CommonStates">

                    <!--The Normal state is the state the button is in
                          when it is not in another state from this VisualStateGroup.
                          There is no special visual behavior for this state, but
                          the VisualState must be defined in order for the button
                          to return to its initial state.-->
                    <VisualState x:Name="Normal" />

                    <!--Change the SolidColorBrush, BorderBrush, to red when the
                          mouse is over the button.-->
                    <VisualState x:Name="MouseOver">
                      <Storyboard>
                        <ColorAnimation Storyboard.TargetName="BorderBrush" 
                                            Storyboard.TargetProperty="Color" To="Red" />

                      </Storyboard>
                    </VisualState>

                    <!--Change the SolidColorBrush, BorderBrush, to Transparent when the
                          button is pressed.-->
                    <VisualState x:Name="Pressed">
                      <Storyboard >
                        <ColorAnimation Storyboard.TargetName="BorderBrush" 
                                            Storyboard.TargetProperty="Color" To="Transparent"/>
                      </Storyboard>
                    </VisualState>

                    <!--The Disabled state is omitted for brevity.-->
                  </VisualStateGroup>
                  <!--</Snippet10>-->

                  <!--Define the states and transitions for the focus states.
                        The full definitions are omitted for brevity.-->
                  <VisualStateGroup x:Name="FocusStates">

                    <VisualState x:Name="Focused"/>

                    <VisualState x:Name="Unfocused"/>

                  </VisualStateGroup>

                </VisualStateManager.VisualStateGroups>

                <!--The remainder of the ControlTemplate is the
                      same as the previous example.-->
                <Border.Background>
                  <SolidColorBrush x:Name="BorderBrush" Color="Black"/>
                </Border.Background>

                <Grid Background="{TemplateBinding Background}" Margin="4">
                  <ContentPresenter
                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                      Margin="4,5,4,4" />

                </Grid>


              </Border>
            </ControlTemplate>
            <!--</SnippetVisualStates>-->
          </Setter.Value>
        </Setter>
      </Style>

    </StackPanel.Resources>

    <TextBlock FontSize="20" Text="Buttons with a custom ControlTemplate" HorizontalAlignment="Center"/>
    <TextBlock Text="This sample demonstrates adding VisualStates to a custom ControlTemplate." HorizontalAlignment="Center" Margin="2"
               TextWrapping="Wrap"/>
    <Button Style="{StaticResource newTemplate}" 
            Content="Button1"/>

    <Button Style="{StaticResource newTemplate}" Background="Purple" 
            Content="Button2" Click="Button_Click"/>
  </StackPanel>
</UserControl>
