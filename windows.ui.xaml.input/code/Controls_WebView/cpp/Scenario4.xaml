<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
//
//*********************************************************
-->
<common:LayoutAwarePage
    x:Class="SDKSample.WebViewControl.Scenario4"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:SDKSample.WebViewControl"
    xmlns:common="using:SDKSample.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Grid x:Name="LayoutRoot" Background="White" HorizontalAlignment="Left" VerticalAlignment="Top">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid x:Name="Input" Grid.Row="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="700"/>
            </Grid.ColumnDefinitions>
            <TextBlock  x:Name="Description"  TextWrapping="Wrap" Grid.Row="0" Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left" >
                It is common to need to provide data back to the application from the WebView.  A good example of this is when you call a script that needs
                to send back a return value.  To do this, you use handle the <Run FontStyle="Italic" FontWeight="Bold">ScriptNotify</Run>  event in the application and then in the script you would
                use <Run FontStyle="Italic" FontWeight="Bold"> window.external.notify ("return value")</Run>, where "return value" is the data
                that you want to pass back.
                <LineBreak/>
                <LineBreak/>
                If you load the script into the WebView via the <Run FontStyle="Italic" FontWeight="Bold">NavigateToString()</Run> method, then you are albe to automatically get the result back via the ScriptNotify event.  
                If you load the script by navigating to some URL that contains the script, you must set the <Run FontStyle="Italic" FontWeight="Bold">AllowedScriptNotifyUris</Run> property on the WebView
                control.  This property is a list of URIs that the application trusts and will allow data to be sent from script that may run on the page loaded via the URIs.
            </TextBlock>
            <Grid  Margin="0,10,0,0" Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="156"/>
                    <ColumnDefinition Width="24"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <RadioButton x:Name="NavToString" Content="Use NavigateToString" Margin="0,0,10,0" Grid.Column="0" GroupName="MethodType" Grid.ColumnSpan="2" Click="NavToString_Click"/>
                <RadioButton x:Name="Nav"  Content="Use Navigate" Margin="0,0,10,0" Grid.Column="2" GroupName="MethodType" Click="Nav_Click"/>
                <Button x:Name="FireScript" Content="Fire Script" Grid.Column="3" Click="FireScript_Click" Margin="0,6,0,5"/>
            </Grid>
        </Grid>

        <Grid x:Name="Output" Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="500"/>
                <ColumnDefinition Width="500"/>
            </Grid.ColumnDefinitions>
            <TextBlock x:Name="HTMLLabel" Text="HTML:" Grid.Row="0" Grid.Column="0" Style="{StaticResource BasicTextStyle}"/>
            <TextBlock x:Name="WebViewLabel" Text="WebView:" Grid.Row="0" Grid.Column="1" Margin="10,0,0,0" Style="{StaticResource BasicTextStyle}"/>
            <TextBox x:Name="HTML4" Grid.Row="1" TextWrapping="Wrap" AcceptsReturn="True"/>
            <Border BorderThickness="1" BorderBrush="#FF707070"  Grid.Row="1" Grid.Column="1" Margin="10,0,0,0">
                <WebView x:Name="WebView4" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" ScriptNotify="WebView4_ScriptNotify"/>
            </Border>
        </Grid>

        <!-- Add Storyboards to the visual states below as necessary for supporting the various layouts -->
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="FullScreenLandscape"/>
                <VisualState x:Name="Filled"/>
                <VisualState x:Name="FullScreenPortrait"/>
                <VisualState x:Name="Snapped"/>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</common:LayoutAwarePage>